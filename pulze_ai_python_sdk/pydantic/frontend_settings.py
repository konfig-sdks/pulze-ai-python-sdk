# coding: utf-8

"""
    Pulze.ai API

    At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.

    The version of the OpenAPI document: 0.1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from pulze_ai_python_sdk.pydantic.payment_details_balance import PaymentDetailsBalance
from pulze_ai_python_sdk.pydantic.subscription_paused import SubscriptionPaused
from pulze_ai_python_sdk.pydantic.user_details import UserDetails

class FrontendSettings(BaseModel):
    # Balance details
    balance: PaymentDetailsBalance = Field(alias='balance')

    # The currency of the user. Currently only \"USD\".
    currency: Literal["USD"] = Field(alias='currency')

    # False when it's the user's first login/signup for an organization
    did_onboarding_setup: bool = Field(alias='did_onboarding_setup')

    # True if the email was verified
    email_verified: bool = Field(alias='email_verified')

    # The basic information for the user
    user_details: UserDetails = Field(alias='user_details')

    # Date of last accepted Privacy Policy
    privacy_accepted: typing.Optional[datetime] = Field(None, alias='privacy_accepted')

    # Returned to the frontend when the subscription has been paused for any reason.
    subscription_paused: typing.Optional[SubscriptionPaused] = Field(None, alias='subscription_paused')

    # Date of last accepted Terms of Service
    terms_accepted: typing.Optional[datetime] = Field(None, alias='terms_accepted')
    class Config:
        arbitrary_types_allowed = True

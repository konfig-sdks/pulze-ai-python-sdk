# coding: utf-8

"""
    Pulze.ai API

    At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.

    The version of the OpenAPI document: 0.1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class AppCustomData(BaseModel):
    # The ID of the App it's associated with
    app_id: str = Field(alias='app_id')

    # The type of custom data (file, database, ...)
    data_type: Literal["file"] = Field(alias='data_type')

    # The mimetype of the file
    file_mime: str = Field(alias='file_mime')

    # The name of the file
    file_name: str = Field(alias='file_name')

    # The timestamp the file was added
    added_on: typing.Optional[datetime] = Field(None, alias='added_on')

    # The contents of the file
    file_content: typing.Optional[typing.IO] = Field(None, alias='file_content')

    # The size of the file in Bytes
    file_size: typing.Optional[int] = Field(None, alias='file_size')

    # The ID
    id: typing.Optional[str] = Field(None, alias='id')
    class Config:
        arbitrary_types_allowed = True

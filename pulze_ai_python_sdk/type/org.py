# coding: utf-8

"""
    Pulze.ai API

    At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.

    The version of the OpenAPI document: 0.1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from pulze_ai_python_sdk.type.org_usage import OrgUsage
from pulze_ai_python_sdk.type.subscription_paused import SubscriptionPaused

class RequiredOrg(TypedDict):
    id: str

    # We track the expenses with `pending_expense`, but when we charge, we add up all the requests between `last_invoice_date` and now.
    last_invoice_date: datetime

    org_creator: str

    org_name: str

    # The Stripe's customer ID. `cus_xxxxxx`
    org_stripe_id: str

class OptionalOrg(TypedDict, total=False):
    added_on: datetime

    address_1: str

    address_2: str

    address_city: str

    address_country: str

    address_state: str

    address_zip: str

    # Billing email
    billing_email: str

    # The balance in this Org's account
    credit_balance: typing.Union[int, float]

    # The currency for this organization
    currency: str

    # If this is > 0, we will deduct the balance from here instead of the credit_balance. Add credits to this Org by updating this column
    free_balance: typing.Union[int, float]

    hubspot_id: str

    is_active: bool

    is_personal: bool

    loki_endpoint: str

    loki_id: str

    loki_token: str

    modified_on: datetime

    org_display_name: str

    org_logo: str

    # A reference value for how much money has a customer spent since the last sync with Stripe. When we charge them, we don't use this value, and instead add up all the requests' costs.
    pending_expense: typing.Union[int, float]

    # The timestamp (in s) when the subscription ended or will end. The user will be billed at this point
    period_end: int

    # The timestamp (in s) when the subscription started or will start. If it's not the first cycle, the user was billed at this point
    period_start: int

    prom_endpoint: str

    prom_id: str

    prom_token: str

    # The rate limit for this org, per minute
    rate_limit: int

    spending_limit_hard: typing.Union[int, float]

    spending_limit_soft: typing.Union[int, float]

    # The length of the Platform subscription cycle. Useful for upgrades and downgrades
    subscription_cycle: str

    # The reason the subscription was paused. If `null`, the subscription is considered active
    subscription_pause_reason: SubscriptionPaused

    # PRICE ID (on Stripe). The user's current Subscription ID is created from this Price
    subscription_price_id: str

    # The subscription tier this user is in.
    subscription_tier: str

    # The timestamp (in s) when the trial will end and the paid subscription will start. The user will be billed at this point
    trial_end: int

    # The Usage stats (view) for this org
    usage: OrgUsage

class Org(RequiredOrg, OptionalOrg):
    pass

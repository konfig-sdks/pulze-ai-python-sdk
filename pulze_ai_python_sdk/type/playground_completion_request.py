# coding: utf-8

"""
    Pulze.ai API

    At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.

    The version of the OpenAPI document: 0.1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from pulze_ai_python_sdk.type.llm_model_weights import LLMModelWeights
from pulze_ai_python_sdk.type.role_content_chat_choice import RoleContentChatChoice

class RequiredPlaygroundCompletionRequest(TypedDict):
    pass

class OptionalPlaygroundCompletionRequest(TypedDict, total=False):
    # Optionally, send an App ID belonging to this user's org and all the logs will be logged into that app. This usually means the user is using the playground from the app's page itself.
    app_id: str

    # The maximum number of tokens for the request
    max_tokens: int

    # The list of messages (user/assistant/user/...) for the prompt. At least one message required
    messages: typing.List[RoleContentChatChoice]

    # An optional model name. If specified, that model will be used
    model: str

    # The temperature of the request
    temperature: typing.Union[int, float]

    # @required The weights specific to this request
    weights: LLMModelWeights

class PlaygroundCompletionRequest(RequiredPlaygroundCompletionRequest, OptionalPlaygroundCompletionRequest):
    pass

# coding: utf-8

"""
    Pulze.ai API

    At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.

    The version of the OpenAPI document: 0.1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING


class RequiredSubscriptionSettings(TypedDict):
    # Support from Marketing team (? TBD)
    customer_success: bool

    # Allows to fine-tune models
    fine_tuning: bool

    # Maximum number of apps that can be created
    max_apps: int

    # A human-readable format of max_apps. Example: 'Infinite' or '1000' or 'None'
    max_apps_readable: str

    # The maximum number of tokens that can be _generated_, for each billing period (month)
    max_tokens: int

    # A human-readable format of max_tokens. Example: '50bn' or '+100M'
    max_tokens_readable: str

    # The name for this subscription
    name: str

    # Custom scoring of LLMs using KG
    personalized_llm_routing: bool

    # Allows the user to create and use Prompt-based Models
    prompt_models: bool

    # Allows the user to create and use Prompts
    prompts: bool

    # The level of support this user has access to
    support_level: str

    # A human-readable format for the level of support offered
    support_level_readable: str

class OptionalSubscriptionSettings(TypedDict, total=False):
    # Flowz Feature
    flowz: bool

    # Dynamic LLM routing using KG
    llm_routing: bool

    # The Stripe PriceID for the monthly subscription
    monthly_price_id: str

    # Price per MONTH -- same as in Stripe, here for display purposes
    monthly_price_usd: typing.Union[int, float]

    # The Stripe PriceID for the yearly subscription
    yearly_price_id: str

    # Price per YEAR -- same as in Stripe, here for display purposes
    yearly_price_usd: typing.Union[int, float]

class SubscriptionSettings(RequiredSubscriptionSettings, OptionalSubscriptionSettings):
    pass
